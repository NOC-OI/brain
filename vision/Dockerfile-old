#FROM nvcr.io/nvidia/l4t-pytorch:r35.2.1-pth2.0-py3
#nvcr.io/nvidia/l4t-cuda:12.2.12-devel
#nvcr.io/nvidia/l4t-jetpack:r36.4.0

FROM nvcr.io/nvidia/l4t-base:r36.2.0
WORKDIR /app
SHELL ["/bin/bash", "-c"]
ENV DEBIAN_FRONTEND=noninteractive
#RUN apt-get -y install opencv-python
WORKDIR /tmp/container_build
RUN apt-get update

#RUN apt-get install -y ./nvidia-l4t-core_36.4.6-20250515220842_arm64.deb
#RUN apt-get install cuda-12-2
RUN apt-get install -y libcudart11.0 cuda-cudart-12-2
RUN apt-get install --no-install-recommends -y gcc git zip curl htop libgl1-mesa-glx libglib2.0-0 libpython3-dev gnupg g++ python3-opencv python3-pip


#RUN wget http://ports.ubuntu.com/pool/main/libf/libffi/libffi8_3.4.2-4_arm64.deb
#RUN apt-get install ./libffi8_3.4.2-4_arm64.deb
# MUST install newer libffi (v8) for opencv, which is not usually installable

# No longer needed:
# RUN apt-get install --reinstall libgstreamer1.0-0
# MUST reinstall libgstreamer1.0-0 after for opencv to pick it up, else we get AttributeError: partially initialized module 'cv2' has no attribute 'gapi_wip_gst_GStreamerPipeline' (most likely due to a circular import)


# deps for torch
RUN pip install mpmath typing-extensions sympy pillow networkx MarkupSafe fsspec filelock jinja2

COPY libs /tmp/container_build/libs

RUN mkdir -p /usr/src/ultralytics
#RUN python3 -m pip install --upgrade pip wheel
#RUN pip install --no-cache pika uwsgi tqdm pyyaml psutil thop pandas hydra python-multipart numpy==1.23

RUN pip install /tmp/container_build/libs/torchvision-0.23.0-cp310-cp310-linux_aarch64.whl /tmp/container_build/libs/torch-2.8.0-cp310-cp310-linux_aarch64.whl
#RUN pip install --no-cache torch==2.8.0 torchvision==0.23.0 --index-url https://pypi.jetson-ai-lab.io/jp6/cu129 - broken

RUN apt-get install -y /tmp/container_build/libs/libcudnn9-cuda-12_9.3.0.75-1_arm64.deb

RUN apt-get install -y /tmp/container_build/libs/cuda-toolkit-12-6-config-common_12.6.68-1_all.deb
#RUN apt-get install -y /tmp/container_build/libs/libcublas-12-6_12.6.1.4-1_arm64.deb
RUN apt-get install -y /tmp/container_build/libs/libcufile-12-6_1.11.1.6-1_arm64.deb
RUN apt-get install -y /tmp/container_build/libs/libcufft-12-6_11.2.6.59-1_arm64.deb

RUN pip install --no-cache pika requests pillow
RUN pip install --no-cache ultralytics --no-deps
RUN mkdir /app/yolo_conf
COPY templates/yolo_conf.json /app/yolo_conf/settings.json
RUN mkdir /mnt/nfs_cam
ENV YOLO_CONFIG_DIR="/app/yolo_conf"
COPY src /app
WORKDIR /app
RUN mkdir -p temp
ENTRYPOINT ["python3", "init.py"]
STOPSIGNAL SIGQUIT
